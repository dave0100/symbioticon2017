/*
 * YOMO-Service-Emulation with AHOI
 * [Data Privacy](/sandboxmanager/#/privacy)  [Terms of Service](/sandboxmanager/#/terms)  [Imprint](https://sparkassen-hub.com/impressum/)  &copy; 2017 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.1.0-yomo-emulator
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AccessFieldsMap;
import java.io.IOException;

/**
 * Access
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-05T14:43:56.054Z")

public class Access {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("providerId")
  private Long providerId = null;

  @SerializedName("accessFields")
  private AccessFieldsMap accessFields = null;

  /**
   * The state reflects the validity of the access credentials. The state can change after communicating with the provider.  It can be OK (access credentials are valid); &#x60;ACCESS_LOCKED&#x60; (access is locked: This can happen when, for example, someone tried to login to your account by  using an incorrect PIN too many times or if your account was used for illegal purposes — automatic refresh will be disabled); or &#x60;ACCESS_WRONG&#x60; (access wrong: Saved  credentials are incorrect and no communication with the provider is possible — automatic refresh will be disabled)
   */
  @JsonAdapter(ValidationStateEnum.Adapter.class)
  public enum ValidationStateEnum {
    OK("OK"),
    
    ACCESS_LOCKED("ACCESS_LOCKED"),
    
    ACCESS_WRONG("ACCESS_WRONG");

    private String value;

    ValidationStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidationStateEnum fromValue(String text) {
      for (ValidationStateEnum b : ValidationStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ValidationStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidationStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidationStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ValidationStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("validationState")
  private ValidationStateEnum validationState = null;

  @SerializedName("type")
  private String type = null;

  public Access id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Internal ID of this access (generated value)
   * @return id
  **/
  @ApiModelProperty(value = "Internal ID of this access (generated value)")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Access providerId(Long providerId) {
    this.providerId = providerId;
    return this;
  }

   /**
   * Identifier of the provider to which this access belongs
   * @return providerId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the provider to which this access belongs")
  public Long getProviderId() {
    return providerId;
  }

  public void setProviderId(Long providerId) {
    this.providerId = providerId;
  }

  public Access accessFields(AccessFieldsMap accessFields) {
    this.accessFields = accessFields;
    return this;
  }

   /**
   * Authentication data for the given provider as map of InFieldId to String (e.g., &#x60;{\&quot;USERNAME\&quot;, \&quot;yourName\&quot;}&#x60;)  The fields necessary for the access are determined by the  InputField descriptions of the related provider.
   * @return accessFields
  **/
  @ApiModelProperty(required = true, value = "Authentication data for the given provider as map of InFieldId to String (e.g., `{\"USERNAME\", \"yourName\"}`)  The fields necessary for the access are determined by the  InputField descriptions of the related provider.")
  public AccessFieldsMap getAccessFields() {
    return accessFields;
  }

  public void setAccessFields(AccessFieldsMap accessFields) {
    this.accessFields = accessFields;
  }

  public Access validationState(ValidationStateEnum validationState) {
    this.validationState = validationState;
    return this;
  }

   /**
   * The state reflects the validity of the access credentials. The state can change after communicating with the provider.  It can be OK (access credentials are valid); &#x60;ACCESS_LOCKED&#x60; (access is locked: This can happen when, for example, someone tried to login to your account by  using an incorrect PIN too many times or if your account was used for illegal purposes — automatic refresh will be disabled); or &#x60;ACCESS_WRONG&#x60; (access wrong: Saved  credentials are incorrect and no communication with the provider is possible — automatic refresh will be disabled)
   * @return validationState
  **/
  @ApiModelProperty(value = "The state reflects the validity of the access credentials. The state can change after communicating with the provider.  It can be OK (access credentials are valid); `ACCESS_LOCKED` (access is locked: This can happen when, for example, someone tried to login to your account by  using an incorrect PIN too many times or if your account was used for illegal purposes — automatic refresh will be disabled); or `ACCESS_WRONG` (access wrong: Saved  credentials are incorrect and no communication with the provider is possible — automatic refresh will be disabled)")
  public ValidationStateEnum getValidationState() {
    return validationState;
  }

  public void setValidationState(ValidationStateEnum validationState) {
    this.validationState = validationState;
  }

  public Access type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Discriminator for subtypes. At the moment only &#x60;BankAccess&#x60; is supported.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Discriminator for subtypes. At the moment only `BankAccess` is supported.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Access access = (Access) o;
    return Objects.equals(this.id, access.id) &&
        Objects.equals(this.providerId, access.providerId) &&
        Objects.equals(this.accessFields, access.accessFields) &&
        Objects.equals(this.validationState, access.validationState) &&
        Objects.equals(this.type, access.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, providerId, accessFields, validationState, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Access {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    accessFields: ").append(toIndentedString(accessFields)).append("\n");
    sb.append("    validationState: ").append(toIndentedString(validationState)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

