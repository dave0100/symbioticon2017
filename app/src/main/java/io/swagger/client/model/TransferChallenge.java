/*
 * YOMO-Service-Emulation with AHOI
 * [Data Privacy](/sandboxmanager/#/privacy)  [Terms of Service](/sandboxmanager/#/terms)  [Imprint](https://sparkassen-hub.com/impressum/)  &copy; 2017 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.1.0-yomo-emulator
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InputFieldDescription;
import io.swagger.client.model.ResponseObjectMap;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TransferChallenge
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-05T14:43:56.054Z")
public class TransferChallenge {
  @SerializedName("transferTaskId")
  private Long transferTaskId = null;

  @SerializedName("fieldDescriptions")
  private List<InputFieldDescription> fieldDescriptions = null;

  @SerializedName("challenge")
  private String challenge = null;

  @SerializedName("responseObjects")
  private ResponseObjectMap responseObjects = null;

  public TransferChallenge transferTaskId(Long transferTaskId) {
    this.transferTaskId = transferTaskId;
    return this;
  }

   /**
   * TranferTaskID - The referenced task for that payment — challenge
   * @return transferTaskId
  **/
  @ApiModelProperty(value = "TranferTaskID - The referenced task for that payment — challenge")
  public Long getTransferTaskId() {
    return transferTaskId;
  }

  public void setTransferTaskId(Long transferTaskId) {
    this.transferTaskId = transferTaskId;
  }

  public TransferChallenge fieldDescriptions(List<InputFieldDescription> fieldDescriptions) {
    this.fieldDescriptions = fieldDescriptions;
    return this;
  }

  public TransferChallenge addFieldDescriptionsItem(InputFieldDescription fieldDescriptionsItem) {
    if (this.fieldDescriptions == null) {
      this.fieldDescriptions = new ArrayList<InputFieldDescription>();
    }
    this.fieldDescriptions.add(fieldDescriptionsItem);
    return this;
  }

   /**
   * Information to describe and facilitate validation of an transfer.
   * @return fieldDescriptions
  **/
  @ApiModelProperty(value = "Information to describe and facilitate validation of an transfer.")
  public List<InputFieldDescription> getFieldDescriptions() {
    return fieldDescriptions;
  }

  public void setFieldDescriptions(List<InputFieldDescription> fieldDescriptions) {
    this.fieldDescriptions = fieldDescriptions;
  }

  public TransferChallenge challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Challenge — challenge text
   * @return challenge
  **/
  @ApiModelProperty(required = true, value = "Challenge — challenge text")
  public String getChallenge() {
    return challenge;
  }

  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }

  public TransferChallenge responseObjects(ResponseObjectMap responseObjects) {
    this.responseObjects = responseObjects;
    return this;
  }

   /**
   * FieldSet — The required InputFields for that challenge
   * @return responseObjects
  **/
  @ApiModelProperty(required = true, value = "FieldSet — The required InputFields for that challenge")
  public ResponseObjectMap getResponseObjects() {
    return responseObjects;
  }

  public void setResponseObjects(ResponseObjectMap responseObjects) {
    this.responseObjects = responseObjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferChallenge transferChallenge = (TransferChallenge) o;
    return Objects.equals(this.transferTaskId, transferChallenge.transferTaskId) &&
        Objects.equals(this.fieldDescriptions, transferChallenge.fieldDescriptions) &&
        Objects.equals(this.challenge, transferChallenge.challenge) &&
        Objects.equals(this.responseObjects, transferChallenge.responseObjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferTaskId, fieldDescriptions, challenge, responseObjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferChallenge {\n");
    
    sb.append("    transferTaskId: ").append(toIndentedString(transferTaskId)).append("\n");
    sb.append("    fieldDescriptions: ").append(toIndentedString(fieldDescriptions)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    responseObjects: ").append(toIndentedString(responseObjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

