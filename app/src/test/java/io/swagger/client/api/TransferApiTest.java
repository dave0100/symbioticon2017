/*
 * YOMO-Service-Emulation with AHOI
 * [Data Privacy](/sandboxmanager/#/privacy)  [Terms of Service](/sandboxmanager/#/terms)  [Imprint](https://sparkassen-hub.com/impressum/)  &copy; 2017 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.1.0-yomo-emulator
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Transfer;
import io.swagger.client.model.TransferChallenge;
import io.swagger.client.model.TransferChallengeResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferApi
 */
@Ignore
public class TransferApiTest {

    private final TransferApi api = new TransferApi();

    
    /**
     * Create a transfer authorization
     *
     * **Please note:** Exception from the norm. This POST request will not return  the two header fields X-Id and Location. The returned JSON document  represents the transfer.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postAuthorizationTest() throws ApiException {
        Long accessId = null;
        Long accountId = null;
        Long taskId = null;
        TransferChallengeResponse transferChallengeResponse = null;
        api.postAuthorization(accessId, accountId, taskId, transferChallengeResponse);

        // TODO: test validations
    }
    
    /**
     * Create a new transfer
     *
     * The transfer represents a money  transfer from the account identified by its ID to another bank account.   **Please note:** Exception from the norm. This POST request will not return  the two header fields X-Id and Location. Also, the returned JSON document  does not represent the transfer entity but rather a temporary placeholder.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTransferTest() throws ApiException {
        Long accessId = null;
        Long accountId = null;
        Transfer transfer = null;
        TransferChallenge response = api.postTransfer(accessId, accountId, transfer);

        // TODO: test validations
    }
    
}
